# Simple Nginx Configuration for Crypto Monitoring System
# HTTP only configuration without SSL

worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Upstream Flask backend
    upstream flask_backend {
        server 192.168.27.91:8000 weight=1 max_fails=3 fail_timeout=30s;
    }
    
    # HTTP server configuration
    server {
        listen 80;
        server_name localhost;
        
        # Root directory for static files
        root /usr/share/nginx/html;
        index index.html;
        
        # Static resources
        location /static/ {
            alias /usr/share/nginx/html/static/;
            
            # Cache policy for static assets
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
            }
            
            # Chart files with shorter cache
            location ~* /charts/.*\.(png|jpg|jpeg|json)$ {
                expires 5m;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # Favicon
        location = /favicon.ico {
            alias /usr/share/nginx/html/static/favicon.ico;
            expires 1y;
            add_header Cache-Control "public";
        }
        
        # API requests proxy to Flask backend
        location /api/ {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout configuration
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Cache control
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Page routes proxy to Flask
        location ~ ^/(bitcoin|ethereum|kline)/?$ {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Main page
        location = / {
            try_files /templates/index.html @flask;
        }
        
        # Fallback to Flask
        location @flask {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location = /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}