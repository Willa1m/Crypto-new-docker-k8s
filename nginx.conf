# Nginx配置文件 - 加密货币监控系统
# 项目升级计划 - Nginx集成配置

# 全局配置
worker_processes auto;
error_log logs/error.log;
pid logs/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    # MIME类型配置
    include       mime.types;
    default_type  application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log logs/access.log main;
    
    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 上游Flask应用服务器配置
    upstream flask_backend {
        # 主Flask应用实例
        server 127.0.0.1:8000 weight=3 max_fails=3 fail_timeout=30s;
        # 备用实例（可选，用于负载均衡）
        # server 127.0.0.1:8001 weight=1 max_fails=3 fail_timeout=30s;
        
        # 负载均衡策略
        # least_conn;  # 最少连接
        # ip_hash;     # IP哈希
    }
    
    # HTTP服务器配置（重定向到HTTPS）
    server {
        listen 80;
        server_name localhost crypto-monitor.local;
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS主服务器配置
    server {
        listen 443 ssl http2;
        server_name localhost crypto-monitor.local;
        
        # SSL配置
        ssl_certificate     ./ssl/crypto-monitor.crt;
        ssl_certificate_key ./ssl/crypto-monitor.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 根目录指向前端静态文件
        root "d:/Learn/Computing skill/2025Internship/Codes/Crypto_Upgrade/frontend";
        index index.html;
        
        # 静态资源配置
        location /static/ {
            alias "d:/Learn/Computing skill/2025Internship/Codes/Crypto_Upgrade/frontend/static/";
            
            # 缓存策略
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
            }
            
            # 图表文件特殊处理（较短缓存时间）
            location ~* /charts/.*\.(png|jpg|jpeg|json)$ {
                expires 5m;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # Favicon处理
        location = /favicon.ico {
            alias "d:/Learn/Computing skill/2025Internship/Codes/Crypto_Upgrade/frontend/static/favicon.ico";
            expires 1y;
            add_header Cache-Control "public";
        }
        
        # API请求代理到Flask后端
        location /api/ {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 缓存控制
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # 页面路由代理到Flask
        location ~ ^/(bitcoin|ethereum|kline)/?$ {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 主页处理
        location = / {
            try_files /templates/index.html @flask;
        }
        
        # 其他请求转发到Flask
        location @flask {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
        }
        
        location = /50x.html {
            internal;
        }
        
        # 安全配置
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # 限制请求大小
        client_max_body_size 10M;
        
        # 隐藏Nginx版本
        server_tokens off;
    }
    
    # HTTPS配置（可选）
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost crypto-monitor.local;
    #     
    #     ssl_certificate /path/to/certificate.crt;
    #     ssl_certificate_key /path/to/private.key;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # 其他配置与HTTP相同
    #     # ...
    # }
    
    # 负载均衡健康检查（可选）
    # upstream_conf {
    #     server 127.0.0.1:8000;
    # }
}